openapi: 3.0.0
info:
  title: Test API
  version: 1.0.0
paths:
  /users:
    get:
      summary: Returns a list of users.
      responses:
        "200":
          $ref: "#/components/responses/GetUsersResponseData"
        "500":
          $ref: "#/components/responses/ErrorResponseData"
    post:
      summary: Creates a new user.
      requestBody:
        $ref: "#/components/requestBodies/CreateUserRequestBody"
      responses:
        "201":
          $ref: "#/components/responses/ErrorResponseData"
        "400":
          $ref: "#/components/responses/ErrorResponseData"
        "500":
          $ref: "#/components/responses/ErrorResponseData"
  /users/{id}:
    get:
      summary: Returns a user.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          $ref: "#/components/responses/GetUserResponseData"
        "400":
          $ref: "#/components/responses/ErrorResponseData"
        "404":
          $ref: "#/components/responses/ErrorResponseData"
        "500":
          $ref: "#/components/responses/ErrorResponseData"
    put:
      summary: Updates a user.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: "#/components/requestBodies/UpdateUserRequestBody"
      responses:
        "200":
          $ref: "#/components/responses/UpdateUserResponseData"
        "404":
          $ref: "#/components/responses/ErrorResponseData"
        "500":
          $ref: "#/components/responses/ErrorResponseData"
    delete:
      summary: Deletes a user.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No content
        "404":
          $ref: "#/components/responses/ErrorResponseData"
        "500":
          $ref: "#/components/responses/ErrorResponseData"
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 10
        email:
          type: string
          format: email
      required:
        - id
        - name
        - email
    Error:
      type: object
      properties:
        message:
          type: string
      required:
        - message
  responses:
    GetUsersResponseData:
      description: Response containing a list of users
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/User"
            example:
              - id: "987654321"
                name: Alice
                email: alice@example.com
              - id: "123456789"
                name: Bob
                email: bob@example.com
    ErrorResponseData:
      description: Response containing an error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            message: Bad Request
    GetUserResponseData:
      description: Response containing a single user's data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
          example:
            id: "123456789"
            name: Bob
            email: bob@example.com
    UpdateUserResponseData:
      description: Response containing the updated user data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
          example:
            id: "123456789"
            name: Bob
            email: bob@example.com
  requestBodies:
    CreateUserRequestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                maxLength: 10
              email:
                type: string
                format: email
            required:
              - name
              - email
    UpdateUserRequestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
              name:
                type: string
                maxLength: 10
              email:
                type: string
                format: email
            required:
              - name
              - email
